
allprojects {

	version = '2.0.0-SNAPSHOT'
	group = 'gov.pnnl.proven.cluster'

	task gradleVersion { doLast {  println "Gradle version $gradle.gradleVersion" } }

	task provenVersion {
		doLast {
			println version
			println name
		}
	}
	
}

buildscript {
	repositories { 
		jcenter()
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}
	}
	dependencies { classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2' }
}

subprojects {
	
	ext.javaEEVersion = "8.0"
	ext.payaraVersion = "5.2021.10"
	ext.hazelcastVersion = "5.0.2"
	ext.payaraJerseyVersion = "2.34"
	ext.jenaVersion = "4.4.0"
	ext.influxDbLibVersion = "2.8"
	ext.swaggerVersion = "2.0.8"
	ext.jaxbApiVersion = "2.3.1"
	ext.eclipseMoxyVersion = "2.7.4"
	ext.moduleProjectSuffix = "-module"
	ext.isModuleProject = (project.name.endsWith("${moduleProjectSuffix}"))
	ext.isMemberProject = (project.name == 'proven-member')

	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'

	task javadocJar(type: Jar) {
		from javadoc
		classifier 'javadoc'
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allJava
		classifier 'sources'
	}

	shadowJar { mergeServiceFiles() }

	if (isModuleProject) {

		apply plugin: 'war'
		apply plugin: 'eclipse-wtp'

		jar.enabled = false

		publishing {
			publications {
				mavenWeb(MavenPublication) { from components.web }
			}
		}

//		eclipse {
//			classpath { downloadSources=true }
//			wtp {
//				facet {
//					facet name: 'jst.web', version: '3.1'
//					facet name: 'jst.java', version: '1.8'
//				}
//			}
//		}

		war {
			//archiveFileName = project.name - "-module" + "-$version" + ".war"
			archiveFileName = project.name - "-module" + "-$project.version" + ".war"
			webXml = null
		}

		configurations {
			war {}
			shadow {}
		}

		artifacts {
			war tasks.war
			shadow tasks.shadowJar
		}
	}

	// non-module projects
	else {

		publishing {
			publications {
				mavenJava(MavenPublication) {
					groupId group
					artifactId artifactId
					from components.java
				}
			}
		}

	}

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
		mavenLocal()
		maven { url 'https://jitpack.io' }
		jcenter()
	}

	dependencies {
		// All subprojects
		testImplementation 'junit:junit:4.13.2'
		testImplementation 'org.hamcrest:hamcrest:2.2'
		compileOnly group: 'javax', name: 'javaee-web-api', version: "${javaEEVersion}"
		compileOnly group: 'javax', name: 'javaee-api', version: "${javaEEVersion}"
		compileOnly group: 'fish.payara.api', name: 'payara-api', version: "${payaraVersion}"
		compileOnly group: 'com.hazelcast', name: 'hazelcast', version: "${hazelcastVersion}"
		compileOnly group: 'fish.payara.extras', name: 'payara-micro', version: "${payaraVersion}"	
		compileOnly group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'	
		//implementation group: 'com.hazelcast.jet', name: 'hazelcast-jet', version: "${jetVersion}"
		implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
		implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
		implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
		implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
		implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
		implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.6'
        implementation group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
        
        
        
		if (!isMemberProject) {
			implementation project(':proven-member')
		}

		// Module subprojects
		if (isModuleProject) {
			implementation (group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: "${swaggerVersion}")
			implementation (group: 'io.swagger.core.v3', name: 'swagger-jaxrs2-servlet-initializer', version: "${swaggerVersion}")
		}
	}
}

//
// Project Dependencies
//
project('proven-member') {
	// No dependencies
}

project('proven-member:disclosure-lib') {
	// No dependencies
}

project('proven-member:stream-lib') {
	// No dependencies
}

project('proven-member:model-lib') {
	dependencies {
		api project(':proven-member:disclosure-lib')
	}
}

project('proven-member:module-lib') {
	dependencies {
		api project(':proven-member:model-lib')
		api project(':proven-member:stream-lib')
		api project(':proven-member:pipeline-lib')
	}
}

project('proven-member:hybrid-lib') {
	dependencies {  implementation project(':proven-member:disclosure-lib') }
}

project('proven-member:pipeline-lib') {
	dependencies {  implementation project(':proven-member:disclosure-lib') }
}

project('proven-member:member-module') {
	dependencies {
		implementation project(':proven-member:module-lib') 
	}
}

project('proven-client') {
	dependencies { implementation project(':proven-member:disclosure-lib') }
}
